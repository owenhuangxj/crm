//引入spring boot gradle插件和spring io的依赖管理插件
buildscript {
    ext {
        springIOVersion = 'Cairo-RELEASE'
        springBootVersion = '2.1.2.RELEASE'
    }
    repositories {
        maven{ url 'http://maven.aliyun.com/nexus/content/groups/public'}
    }
    dependencies {
        classpath ("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
    }
}

//应用插件
apply plugin: 'java'
apply plugin: 'idea'
apply plugin: 'war' // 引用war插件，插件中提供了providedCompile依赖
apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'
//apply plugin: 'nebula.provided-base'
//项目设置
group 'com.ss'
version '1.0'

//编译设置
sourceCompatibility = 1.8
targetCompatibility = 1.8
compileJava.options.encoding = "UTF-8"
compileTestJava.options.encoding = "UTF-8"

//设置maven阿里云镜像
repositories {
    mavenCentral()
    maven{ url 'http://maven.aliyun.com/nexus/content/groups/public'}
}
//plugins {
//    id 'net.ltgt.apt' version '0.10'
//}
dependencies {
    //spring boot的starter
    compile 'org.springframework.boot:spring-boot-starter'
    compile 'org.springframework.boot:spring-boot-starter-web'
    compile 'org.springframework.boot:spring-boot-starter-aop'
    compile 'org.springframework.boot:spring-boot-devtools'
    compile('net.sf.json-lib:json-lib:2.4:jdk15')
    testCompile 'org.springframework.boot:spring-boot-starter-test'
    compile 'javax.mail:javax.mail-api:1.6.2'
    compile 'org.apache.poi:poi:3.8'
    compile 'org.apache.poi:poi-ooxml:3.8'
    //mysql及druid连接池
    compile 'mysql:mysql-connector-java'
    compile 'com.alibaba:druid-spring-boot-starter:1.1.9'

    //mybatis
    compile group: 'com.baomidou', name: 'mybatis-plus-boot-starter', version: '3.0.5'

    //shiro
    compile 'org.apache.shiro:shiro-spring-boot-web-starter:1.4.0'
    //redis
    implementation 'org.springframework.boot:spring-boot-starter-data-redis'
    //log4j2
    compile group: 'org.apache.logging.log4j', name: 'log4j-api', version: '2.11.1'
    compile group: 'org.apache.logging.log4j', name: 'log4j-core', version: '2.11.1'
    //其他库
    compile 'com.alibaba:fastjson:1.2.47'
    compile 'org.apache.commons:commons-lang3'
    //lombok的正确依赖方式
    annotationProcessor 'org.projectlombok:lombok:1.18.4'
    compileOnly 'org.projectlombok:lombok:1.18.4'
    testAnnotationProcessor 'org.projectlombok:lombok:1.18.4'
    testCompileOnly 'org.projectlombok:lombok:1.18.4'
//    apt 'org.projectlombok:lombok:1.18.4'
//    provided 'org.projectlombok:lombok:1.18.4'

    providedCompile group: 'javax.servlet', name: 'javax.servlet-api', version: '3.0.1'

}
//项目依赖

//设置后依赖不用写版本号
dependencyManagement {
    imports {
        mavenBom "io.spring.platform:platform-bom:${springIOVersion}"
        mavenBom "org.springframework.boot:spring-boot-starter-parent:${springBootVersion}"
    }
}

configurations {
    dev
}

bootRun {
    // Use Spring Boot DevTool only when we run Gradle bootRun task
    classpath = sourceSets.main.runtimeClasspath + configurations.dev
}

/**
 * gradle的持续构建和springboot devtools结合，不用修改java代码后自己重启。
 * 开两个terminal，分别执行以下的命令即可：
 *
 *     1. gradle build --continuous
 *     2. gradle bootRun
 *
 * 参考：
 *
 *     https://dzone.com/articles/continuous-auto-restart-with-spring-boot-devtools
 *
 */


